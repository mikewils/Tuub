#N canvas 345 50 871 629 12;
#X text 50 557 NOTE: not all messages might currently work on your
operating-system.;
#N canvas 54 138 989 623 Linux 0;
#X text 59 70 the udev system from kernel 2.6 allows special naming
of devices.;
#X text 60 105 Thus the standards in the source cannot be depended
upon.;
#X msg 136 173 device /dev/myname/somewhere;
#X text 56 150 If you know the device name \, then use the message
;
#X text 57 205 Then use the following to turn on IEEE1394;
#X msg 136 233 driver 1;
#X text 52 292 If you do ls -l /dev/dv1394/0 then you will see something
like;
#X text 271 326 2007-08-22 18:48 /dev/dv1394/0;
#X text 52 325 crw-rw---- 1 root video 171 \, 32;
#X text 54 346 Which means that /dev/dv1394 is a character device (c
at start) with major number 171 \, so it is an ieee1394 device.;
#X text 53 380 This should help you find the device and make it work.
;
#X text 55 435 Note that the major number may change in the future
(udev allows arbitrary major numbers) so this might get harder.;
#X text 383 506 Added 22 August 2007;
#X text 61 31 Getting DV camera (ieee1394) working on (debian) linux
;
#X text 59 403 Note /dev/raw1394 is NOT a usable device here!;
#X text 588 103 driver 0 is video4linux;
#X text 588 117 driver 1 is ieee1394;
#X text 587 147 device N should enumerate through various cameras;
#X text 581 72 quality message only seems to have 1 and 2 as values
;
#X text 623 32 notes on messages under Linux;
#X text 592 190 enumerate does not work;
#X text 595 210 dialog does not work;
#X text 593 229 dimen does not work;
#X text 52 257 If you do not know the name of your camera device \,
then the following might help you find it in the /dev heirarchy.;
#X text 97 337 comment;
#X restore 533 564 pd Linux Notes;
#N canvas 0 0 450 300 SGI 0;
#X text 24 61 SGI only:;
#X text 50 84 swap 1/0 : swap upside down;
#X text 49 101 offset x y : set the x y offset of the captured frame
;
#X restore 682 564 pd SGI Notes;
#X text 451 6 GEM object;
#X obj 8 46 cnv 15 540 100 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 559 47 cnv 15 280 500 empty empty empty 20 12 0 14 -228992 -66577
0;
#X text 71 21 Class: pix object (pix source);
#X text 453 27 Example:;
#X text 50 2 Synopsis: [pix_video];
#X text 29 47 Description: open a camera and get input;
#X obj 9 182 cnv 15 540 365 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 9 149 cnv 15 540 30 empty empty empty 20 12 0 14 -195568 -66577
0;
#X text 18 148 Arguments:;
#X text 17 526 Outlet 1: gemlist;
#X text 17 198 Inlet 1: gemlist;
#X text 16 308 Inlet 1: colorspace "RGBA|YUV|Grey": decodes the current
film into the specified colorspace.;
#X text 64 159 none;
#X text 33 184 Inlet:;
#X text 33 512 Outlet:;
#X obj 714 460 cnv 15 100 60 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 211 25 450 300 gemwin 1;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X msg 67 70 set destroy;
#X msg 132 112 create \, 1;
#X msg 198 112 destroy;
#X msg 156 71 set create;
#X obj 67 41 route create;
#X msg 271 88 dimen 100 100;
#X connect 2 0 7 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 3 0;
#X connect 7 0 4 0;
#X connect 7 0 8 0;
#X connect 7 1 6 0;
#X connect 7 1 5 0;
#X connect 8 0 0 0;
#X restore 719 499 pd gemwin;
#X msg 719 477 destroy;
#X text 715 456 Create window:;
#X obj 563 86 cnv 15 230 280 empty empty empty 20 12 0 14 -24198 -66577
0;
#X obj 564 53 gemhead;
#X msg 593 124 dimen 64 64;
#X msg 583 99 dimen 256 128;
#X obj 564 513 pix_texture;
#X msg 632 261 enumerate;
#X msg 638 283 dialog;
#X msg 601 153 colorspace RGBA;
#X obj 570 376 pix_video;
#X msg 622 235 device /dev/dv1394/0;
#X msg 726 308 driver 1;
#X msg 642 308 driver 0;
#X text 17 216 Inlet 1: device <spec>: the number or file path to the
input device;
#X msg 606 211 device 0;
#N canvas 162 133 570 420 serin 0;
#X obj 205 60 cnv 20 20 20 empty \$0-open-canvas 0 4 10 0 16 -233017
-1 0;
#X obj 60 61 hradio 18 1 1 8 empty empty empty 0 -6 0 8 -225271 -1
-1 0;
#X obj 60 13 inlet;
#X msg 200 202 label \$1;
#X obj 200 180 makefilename %d;
#X obj 59 108 int;
#X obj 59 337 outlet;
#X msg 201 306 set \$1 \$2;
#X obj 59 266 trigger bang anything;
#X obj 201 286 list;
#X obj 200 225 send \$0-open-canvas;
#X msg 60 210 device \$1;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 5 0 11 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 8 1 9 0;
#X connect 9 0 7 0;
#X connect 11 0 8 0;
#X coords 0 -1 1 1 165 20 1 60 60;
#X restore 606 187 pd serin;
#X text 16 339 Inlet 1: dimen <number> <number>: set various dimensions
for the image (does not work on all capture devices);
#X text 15 370 Inlet 1: quality <number>: compression quality;
#X text 14 419 Inlet 1: enumerate: list all devices to the console
;
#X text 13 66 [pix_video] opens a wide array of camera \, from USB
to FireWire to capture cards \, as long as the camera is supported
by your operating system.;
#X text 17 245 Inlet 1: driver <number>: switch between different drivers
\, e.g. v4l \, ieee1394 \, etc.;
#X text 15 388 Inlet 1: dialog: open a dialog to configure the input
device (Mac OS X and Windows);
#X text 16 276 Inlet 1: driver <symbol>: switch between different drivers
\, e.g. v4l \, v4l2 \, dv...;
#X msg 649 334 driver dv;
#X obj 564 537 rectangle 5 4;
#X obj 564 403 pix_grey;
#X obj 561 437 pix_pix2sig;
#X obj 589 479 outlet~;
#X connect 20 0 21 0;
#X connect 21 0 20 0;
#X connect 24 0 31 0;
#X connect 25 0 31 0;
#X connect 26 0 31 0;
#X connect 27 0 46 0;
#X connect 28 0 31 0;
#X connect 29 0 31 0;
#X connect 30 0 31 0;
#X connect 31 0 47 0;
#X connect 32 0 31 0;
#X connect 33 0 31 0;
#X connect 34 0 31 0;
#X connect 36 0 31 0;
#X connect 37 0 36 0;
#X connect 45 0 31 0;
#X connect 47 0 48 0;
#X connect 48 0 27 0;
#X connect 48 1 49 0;
